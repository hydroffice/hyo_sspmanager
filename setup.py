from __future__ import absolute_import, division, print_function  # unicode_literalsimport osimport sysfrom setuptools import setupfrom setuptools import find_packagesfrom setuptools.command.test import test as test_commandhere = os.path.abspath(os.path.dirname(__file__))def is_windows():    """    Check if the current OS is Windows    """    import sys    import os    return (sys.platform == 'win32') or (os.name is "nt")def txt_read(*paths):    """Build a file path from *paths* and return the textual contents."""    with open(os.path.join(here, *paths), 'r') as f:        return f.read()class PyTest(test_command):    """Testing class"""    user_options = [('pytest-args=', 'a', "Arguments to pass to py.test")]    def initialize_options(self):        test_command.initialize_options(self)        self.pytest_args = None    def finalize_options(self):        test_command.finalize_options(self)        self.test_args = []        self.test_suite = True    def run_tests(self):        # import here, because outside the eggs aren't loaded        import pytest        error_no = pytest.main(self.pytest_args or [] + ["hydroffice/ssp/tests"])        sys.exit(error_no)# ---------------------------------------------------------------------------#                      Populate dictionary with settings# ---------------------------------------------------------------------------if 'bdist_wininst' in sys.argv:    if len(sys.argv) > 2 and ('sdist' in sys.argv or 'bdist_rpm' in sys.argv):        print("Error: bdist_wininst must be run alone. Exiting.")        sys.exit(1)# Create a dict with the basic information# This dict is eventually passed to setup after additional keys are added.setup_args = dict()setup_args['name'] = 'hydroffice ssp'setup_args['version'] = '0.2.0'setup_args['url'] = 'https://bitbucket.org/gmasetti/hyo_ssp/'setup_args['license'] = 'BSD-like license'setup_args['author'] = 'Giuseppe Masetti (CCOM,UNH); Brian R. Calder (CCOM, UNH); Matthew Wilson (NOAA, OCS)'setup_args['author_email'] = 'gmasetti@ccom.unh.edu; brc@ccom.unh.edu; matt.wilson@noaa.gov'## descriptive stuff#description = 'Sound speed profile library and tools.'setup_args['description'] = descriptionif 'bdist_wininst' in sys.argv:    setup_args['long_description'] = descriptionelse:    setup_args['long_description'] = (txt_read('README.txt') + '\n\n' +                                      txt_read('README.md') + '\n\n' +                                      txt_read('HISTORY.txt') + '\n\n' +                                      txt_read('AUTHORS.txt'))setup_args['classifiers'] = \    [  # https://pypi.python.org/pypi?%3Aaction=list_classifiers        'Development Status :: 1 - Planning',        'Intended Audience :: Science/Research',        'Natural Language :: English',        'License :: OSI Approved :: BSD License',        'Operating System :: OS Independent',        'Programming Language :: Python',        'Programming Language :: Python :: 2',        'Programming Language :: Python :: 2.7',        'Programming Language :: Python :: 3',        'Programming Language :: Python :: 3.4',        'Topic :: Scientific/Engineering :: GIS',        'Topic :: Office/Business :: Office Suites',    ]setup_args['keywords'] = "hydrography ocean mapping survey ssp"## code stuff## requirementssetup_args['setup_requires'] =\    [        "setuptools",        "wheel",    ]setup_args['install_requires'] =\    [        "hydroffice-base",        # "wxpython",    ]setup_args['tests_require'] =\    [        "pytest",        "pytest-cov",    ]setup_args['cmdclass'] =\    {        "test": PyTest,    }# hydroffice namespace, packages and other filessetup_args['namespace_packages'] = ['hydroffice']setup_args['packages'] = find_packages(exclude=["*.tests", "*.tests.*", "tests.*", "tests", "*.test*",                                                ])setup_args['package_data'] =\    {        '':        [            'media/*.png', 'media/*.ico', 'oldgui/*.ico', 'oldgui/*.png', 'config.ini',            'docs/*.pdf',            'data/samples/asvp/*.asvp',            'data/samples/castaway/*.csv',            'data/samples/digibar/digibar_pro/*.txt',            'data/samples/digibar/digibar_s/*.csv',            'data/samples/elac/*.sva',            'data/samples/idronaut/316 Plus/*.txt',            'data/samples/saiv/sd204/*.txt',            'data/samples/seabird/*.cnv',            'data/samples/sippican/*.edf',            'data/samples/sippican/format2/*.edf',            'data/samples/sippican/langseth/*.edf',            'data/samples/sonardyne/*.pro',            'data/samples/turo/*.nc',            'data/samples/unb/*.unb',            'data/samples/valeport/midas/*.000',            'data/samples/valeport/miniSVP/*.TXT',            'data/samples/valeport/monitor/*.000',        ],    }setup_args['data_files'] = []setup_args['entry_points'] =\    {        'gui_scripts':        [            #'ssp_gui = hydroffice.ssp.gui.hyo_gui:gui',            'SSP_gui = hydroffice.ssp.oldgui.gui:gui',        ],    }setup_args['options'] = \    {        "bdist_wininst":        {            "bitmap": "hydroffice/ssp/gui/media/hydroffice_wininst.bmp",        }    }# ---------------------------------------------------------------------------#                            Do the actual setup now# ---------------------------------------------------------------------------# print(" >> %s" % setup_args['packages'])setup(**setup_args)